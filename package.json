{
  "name": "embedded-unit-testing-extension",
  "publisher": "gerioldman",
  "displayName": "Embedded Unit Testing Extension",
  "description": "Embedded Unit Testing Extension for VS Code. Based on the C language and Meson build system, with a bit of help from Python.",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.75.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gerioldman/Embedded-Unit-Testing-Extension-for-VSCode"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "view/title": [
        {
          "command": "unit_editor.createunit",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.generateProject",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.configureProject",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.compileProject",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.flashProject",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.runTests",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.runCoverage",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.runStaticAnalysis",
          "when": "view == unit_editor",
          "group": "navigation"
        },
        {
          "command": "unit_editor.parseStaticAnalysis",
          "when": "view == unit_editor",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "unit_editor.deleteunit",
          "when": "view == unit_editor && viewItem == unit",
          "group": "inline"
        },
        {
          "command": "unit_editor.createTestSuite",
          "when": "view == unit_editor && viewItem == unit",
          "group": "inline"
        },
        {
          "command": "unit_editor.deleteTestSuite",
          "when": "view == unit_editor && viewItem == testSuite",
          "group": "inline"
        },
        {
          "command": "unit_editor.createTestCase",
          "when": "view == unit_editor && viewItem == testSuite",
          "group": "inline"
        },
        {
          "command": "unit_editor.deleteTestCase",
          "when": "view == unit_editor && viewItem == testCase",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "command": "unit_editor.generateProject",
        "title": "Generate Project",
        "icon": "$(play)"
      },
      {
        "command": "unit_editor.createunit",
        "title": "Create unit",
        "icon": "$(add)"
      },
      {
        "command": "unit_editor.deleteunit",
        "title": "Delete unit",
        "icon": "$(trash)"
      },
      {
        "command": "unit_editor.createTestSuite",
        "title": "Create TestSuite",
        "icon": "$(add)"
      },
      {
        "command": "unit_editor.deleteTestSuite",
        "title": "Delete TestSuite",
        "icon": "$(trash)"
      },
      {
        "command": "unit_editor.createTestCase",
        "title": "Create TestCase",
        "icon": "$(add)"
      },
      {
        "command": "unit_editor.deleteTestCase",
        "title": "Delete TestCase",
        "icon": "$(trash)"
      },
      {
        "command": "unit_editor.configureProject",
        "title": "Configure Project",
        "icon": "$(gear)"
      },
      {
        "command": "unit_editor.compileProject",
        "title": "Compile Project",
        "icon": "$(run-all)"
      },
      {
        "command": "unit_editor.flashProject",
        "title": "Flash Project",
        "icon": "$(plug)"
      },
      {
        "command": "unit_editor.runTests",
        "title": "Run Tests",
        "icon": "$(run)"
      },
      {
        "command": "unit_editor.runCoverage",
        "title": "Run Coverage",
        "icon": "$(run)"
      },
      {
        "command": "unit_editor.runStaticAnalysis",
        "title": "Run Static Analysis",
        "icon": "$(run)"
      },
      {
        "command": "unit_editor.createProject",
        "title": "Create Project"
      },
      {
        "command": "unit_editor.parseStaticAnalysis",
        "title": "Parse Static Analysis",
        "icon": "$(book)"
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "unitbasedprojectexplorer",
          "title": "Unit-based Project Explorer",
          "icon": "resources/unit.svg"
        }
      ]
    },
    "views":
    {
      "unitbasedprojectexplorer": [
        {
          "id": "unit_editor",
          "name": "unit Editor"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.1",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^5.49.0",
    "@typescript-eslint/parser": "^5.49.0",
    "@vscode/test-electron": "^2.2.2",
    "eslint": "^8.33.0",
    "glob": "^8.1.0",
    "mocha": "^10.1.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "@base2/pretty-print-object": "^1.0.2",
    "jsonc-parser": "^3.2.0"
  }
}
